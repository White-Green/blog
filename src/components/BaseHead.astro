---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE } from '../consts';
import { SEO } from 'astro-seo';

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Check if the current page is an article page
const isArticlePage = Astro.url.pathname.startsWith('/articles/');
const slug = isArticlePage ? Astro.url.pathname.split('/articles/')[1].replace(/\/$/, '') : '';

// Generate OG image URL for articles
const ogImageUrl = isArticlePage && slug
  ? new URL(`/og/${slug}.webp`, Astro.site).toString()
  : undefined;

const { title, description, image = '/blog-placeholder-1.jpg' } = Astro.props;
const finalImage = ogImageUrl || image;
const imageUrl = new URL(finalImage, Astro.url).toString();
---

<!-- Global Metadata -->
<meta charset="utf-8" />

<!-- KaTeX CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css" integrity="sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV" crossorigin="anonymous" />

<SEO
  title={title}
  description={description}
  canonical={canonicalURL.toString()}
  openGraph={{
    basic: {
      title: title,
      type: "website",
      image: imageUrl,
      url: Astro.url.toString(),
    },
    optional: {
      description: description,
    },
    image: {
      alt: title,
    },
  }}
  twitter={{
    card: "summary_large_image",
    title: title,
    description: description,
    image: imageUrl,
    imageAlt: title,
  }}
  extend={{
    // extending the default link tags
    link: [
      { rel: "icon", type: "image/svg+xml", href: "/favicon.svg" },
      { rel: "sitemap", href: "/sitemap-index.xml" },
      {
        rel: "alternate",
        type: "application/rss+xml",
        title: SITE_TITLE,
        href: new URL('rss.xml', Astro.site).toString(),
      },
    ],
    // extending the default meta tags
    meta: [
      { name: "viewport", content: "width=device-width,initial-scale=1" },
      { name: "generator", content: Astro.generator },
    ],
  }}
/>
